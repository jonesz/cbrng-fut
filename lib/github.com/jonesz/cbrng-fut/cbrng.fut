module type cbrng_engine = {
  -- | A type generated by the engine.
  type t

  -- | A type of the key which the engine is parameterized by.
  type k

  -- | Generate a single random element for a given key/counter.
  val rand : (key: k) -> (ctr: i64) -> t

  -- | The minimum value potentially returned by the generator.
  val min : t

  -- | The maximum value potentially returned by the generator.
  val max : t
}

-- | [Squares: A Fast Counter-Based RNG](https://arxiv.org/pdf/2004.06278)
module squares32 : cbrng_engine with t = u32 with k = i64 = {
  type t = u32
  type k = i64

  -- http://stackoverflow.com/a/12996028
  local def hash (x: i64) : i64 =
    let x = (x ^ (x >> 16)) * 0x45d9f3b
    let x = (x ^ (x >> 16)) * 0x45d9f3b
    in x ^ (x >> 16)
 
  def rand key ctr =
    ???
}
